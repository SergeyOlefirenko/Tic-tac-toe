[{"C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\index.js":"1","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\App.jsx":"2","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Game.jsx":"3","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Data.jsx":"4","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Home.jsx":"5","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Login.jsx":"6","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\winCalc.jsx":"7","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Board.jsx":"8","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Square.jsx":"9","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\AI.jsx":"10","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\AiBoard.jsx":"11","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\AiGame.jsx":"12"},{"size":578,"mtime":1677597382448,"results":"13","hashOfConfig":"14"},{"size":5796,"mtime":1677662708962,"results":"15","hashOfConfig":"14"},{"size":5648,"mtime":1677597250543,"results":"16","hashOfConfig":"14"},{"size":1928,"mtime":1677013228000,"results":"17","hashOfConfig":"14"},{"size":4478,"mtime":1677662635791,"results":"18","hashOfConfig":"14"},{"size":1510,"mtime":1676986558000,"results":"19","hashOfConfig":"14"},{"size":404,"mtime":1677597577102,"results":"20","hashOfConfig":"14"},{"size":357,"mtime":1675459264000,"results":"21","hashOfConfig":"14"},{"size":228,"mtime":1675459290000,"results":"22","hashOfConfig":"14"},{"size":9387,"mtime":1677662293490,"results":"23","hashOfConfig":"14"},{"size":4312,"mtime":1677617090857,"results":"24","hashOfConfig":"14"},{"size":1590,"mtime":1677610274417,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"zbapb1",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"30"},"C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\index.js",["71","72"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport Modal from \"react-modal\";\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n// const mongoose = require(\"mongoose\");\n// mongoose.connect(\"mongodb://localhost/muggers-db\")\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\nModal.setAppElement(\"#root\");\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n",[],"C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\App.jsx",["73","74","75","76","77","78","79","80","81","82","83","84"],[],"import './App.css';\nimport Home from './components/Home';\nimport Game from './components/Game';\nimport Data from './components/Data';\nimport Login from './components/Login';\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport AiGame from \"./components/AiGame\";\n// import \"papercss/dist/paper.min.css\";\nimport { Routes, Route, useNavigate} from 'react-router-dom';\nimport { createContext } from 'react';\nimport { useState, useEffect } from 'react';\nexport const AppContext = createContext();\nfunction App() {\n  const [showText, setShowText] = useState(false)\n  const [user1, setUser1] = useState()\n  const [user2, setUser2] = useState()\n  const [win, setWin] = useState()\n  const navigate = useNavigate()\n \n//  useEffect(()=>{\n//   if(user){\n//     navigate('/personal')\n//   }\n//  }, [user])\n\n function home() {\n  navigate('/home')\n}\n\n function profile() {\n  navigate('/login')\n}\nfunction logout() {\n  // navigate('/login')\n}\nfunction settings() {\n  navigate('/settings')\n}\nfunction history() {\n \n}\n  return (\n<AppContext.Provider value={{\n      user1,\n      setUser1,\n      user2,\n      setUser2,\n      win,\n      setWin\n     }}>\n    <div className=\"App\"> \n  <div className='h-screen flex flex-col justify-between items-center bg-gray-800' data-theme=\"winter\">\n  <div className=\"navbar  bg-neutral\">\n  <div className=\"flex-1\">\n    <a onClick={home} className=\"btn btn-ghost normal-case text-xl\">tic-tac-toe</a>\n  </div>\n  <div className=\"flex-none gap-2\">\n    <div className=\"form-control\">\n      <input type=\"text\" placeholder=\"Search\" className=\"input input-bordered w-40\" />\n    </div>\n    <div className=\"dropdown dropdown-end\">\n      <label tabIndex={0} className=\"btn btn-ghost btn-circle avatar\">\n        <div className=\"w-10 rounded-full\">\n          <img src=\"https://placeimg.com/80/80/people\" />\n        </div>\n      </label>\n      <ul tabIndex={0} className=\"mt-3 p-2 shadow menu menu-compact dropdown-content bg-base-100 rounded-box w-52\">\n        <li>\n          <a onClick={profile} className=\"justify-between\">\n            Profile\n            <span className=\"badge\">Hello!</span>\n          </a>\n        </li>\n        <li><a onClick={settings}>Settings</a></li>\n        <li><a onClick={() => {setShowText(!showText)}}>History</a></li>\n        {showText === true} \n        <li><a onClick={logout}>Logout</a></li>\n      </ul>\n    </div>\n  </div>\n</div> \n{/* <div className='invitation'>\n<h1>Dear participants!</h1>\n<h1>Glad to welcome you on the start page.</h1>\n<h1>Below you will find a description of the game and conditions of participation.</h1>\n<h1>To start the game, go to the home page by clicking on the name in the upper left corner.</h1>\n</div> */}\n<Routes>\n  <Route path='/home' element={<Home />}/>\n  <Route path='/login' element={<Login />}/>\n  <Route path='/game' element={<Game />}/>\n  <Route path='/data' element={<Data />}/>\n  <Route path='/aiGame' element={<AiGame />}/>\n </Routes>\n {/* <Main>\n        <AI />\n      </Main>\n      <Footer>\n        <FooterInner>\n          View the code on{\" \"}\n          <a href='https://github.com/SergeyOlefirenko/Tic-tac-toe'>Github</a>\n        </FooterInner>\n      </Footer> */}\n <footer className=\"footer items-center p-4 bg-neutral text-neutral-content\">\n  <div className=\"items-center grid-flow-col\">\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fillRule=\"evenodd\" clipRule=\"evenodd\" className=\"fill-current\"><path d=\"M22.672 15.226l-2.432.811.841 2.515c.33 1.019-.209 2.127-1.23 2.456-1.15.325-2.148-.321-2.463-1.226l-.84-2.518-5.013 1.677.84 2.517c.391 1.203-.434 2.542-1.831 2.542-.88 0-1.601-.564-1.86-1.314l-.842-2.516-2.431.809c-1.135.328-2.145-.317-2.463-1.229-.329-1.018.211-2.127 1.231-2.456l2.432-.809-1.621-4.823-2.432.808c-1.355.384-2.558-.59-2.558-1.839 0-.817.509-1.582 1.327-1.846l2.433-.809-.842-2.515c-.33-1.02.211-2.129 1.232-2.458 1.02-.329 2.13.209 2.461 1.229l.842 2.515 5.011-1.677-.839-2.517c-.403-1.238.484-2.553 1.843-2.553.819 0 1.585.509 1.85 1.326l.841 2.517 2.431-.81c1.02-.33 2.131.211 2.461 1.229.332 1.018-.21 2.126-1.23 2.456l-2.433.809 1.622 4.823 2.433-.809c1.242-.401 2.557.484 2.557 1.838 0 .819-.51 1.583-1.328 1.847m-8.992-6.428l-5.01 1.675 1.619 4.828 5.011-1.674-1.62-4.829z\"></path></svg> \n    <p>tic-tac-toe</p>\n  </div> \n  <div className=\"grid-flow-col gap-4 md:place-self-center md:justify-self-end\">\n    <a><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"fill-current\"><path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"></path></svg>\n    </a> \n    <a><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"fill-current\"><path d=\"M19.615 3.184c-3.604-.246-11.631-.245-15.23 0-3.897.266-4.356 2.62-4.385 8.816.029 6.185.484 8.549 4.385 8.816 3.6.245 11.626.246 15.23 0 3.897-.266 4.356-2.62 4.385-8.816-.029-6.185-.484-8.549-4.385-8.816zm-10.615 12.816v-8l8 3.993-8 4.007z\"></path></svg></a>\n    <a><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" className=\"fill-current\"><path d=\"M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z\"></path></svg></a>\n  </div>\n</footer>\n  </div>  \n    </div>\n      </AppContext.Provider>   \n  );\n}\n\nexport default App;\n\n\n","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Game.jsx",["85","86","87","88","89","90","91","92"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport background from '../images/game.png'\r\nimport Board from './Board';\r\nimport { useState } from 'react';\r\nimport { winCalc } from '../winCalc';\r\nimport { AppContext } from \"../App\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\nconst Game = () => {\r\n  const {user1} = useContext(AppContext)\r\n  const {user2} = useContext(AppContext)\r\n  const navigate = useNavigate();\r\n  const [board, setBoard] = useState(Array(9).fill(null))\r\n  const [xIsNext, setXIsNext] = useState(true)\r\n  const [xcount, setXCount] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n  const [xscore, setXScore] = useState(localStorage.getItem('XScore'))\r\n  const [score, setScore] = useState(localStorage.getItem('Score'))\r\n  const [drawScore, setDrawScore] = useState(localStorage.getItem('DrawScore'))\r\n  const [draw, setDraw] = useState(false)\r\n  const winner = winCalc(board)\r\n \r\n  \r\n\r\n//   if(winner == 'X'){\r\n//     let copy = [localStorage.getItem('Storage')]\r\n//     copy.push(user1)\r\n//     console.log(copy);\r\n//     localStorage.setItem('Storage', copy)\r\n//   }\r\n// else if(winner == '0'){\r\n//     let copy = [localStorage.getItem('Storage')]\r\n//     copy.push(user2)\r\n//     console.log(copy);\r\n//     localStorage.setItem('Storage', copy)\r\n//   }\r\n\r\n  if(winner == 'X'){\r\n    let copy = [localStorage.getItem('Storage')]\r\n    copy.push(user1)\r\n    const element = copy.map((i) => (\r\n  i.split(',')\r\n))\r\nconsole.log(element);\r\n\r\n    localStorage.setItem('Storage', element)\r\n  }\r\nelse if(winner == '0'){\r\n    let copy = [localStorage.getItem('Storage')]\r\n    copy.push(user2)\r\n    const element = copy.map((i) => (\r\n  i.split(',')\r\n))\r\nconsole.log(element);\r\n    localStorage.setItem('Storage', element)\r\n  }\r\n\r\n// const element = copy.map((i) => (\r\n//   i.split(',')\r\n// ))\r\n// console.log(element);\r\n//     localStorage.setItem('Storage', element)\r\n\r\n\r\n  // Draw checker\r\n  if (!winner && !board.includes(null)) {\r\n    setDraw(true)\r\n    localStorage.removeItem('Winners');\r\n    localStorage.setItem(user1, 0)\r\n    localStorage.setItem(user2, 0)\r\n    setDrawScore(Number(drawScore))\r\n    localStorage.setItem('DrawScore', drawScore+1)\r\n    setBoard(board)\r\n  }\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // WinChecker\r\n  // if(winner === 'X'){\r\n  //   setXCount(xcount + 4.5)\r\n  //   localStorage.setItem(user1, Math.round(xcount + 4.5)); \r\n  //   localStorage.setItem('Winners', user1)\r\n  //   setXScore(Number(xscore))\r\n  //   localStorage.setItem('XScore', Number(xscore+1))\r\n  //   localStorage.removeItem('Draw'); \r\n  // }\r\n \r\n  // if(winner === '0'){\r\n  //     setCount(count + 4.5)\r\n  //     localStorage.setItem(user2, Math.round(count + 4.5));\r\n  //     localStorage.setItem('Winners', user2)\r\n  //     setScore(Number(score))\r\n  //     localStorage.setItem('Score', Number(score+1))\r\n  //     localStorage.removeItem('Draw');\r\n  //   }\r\n\r\n\r\n\r\n  const clickHandler = (index) => {\r\n    const copyBoard = [...board]\r\n    // Already clicked or not\r\n    if (copyBoard[index]) {\r\n      return\r\n    }\r\n    copyBoard[index] = xIsNext ? 'X' : '0'\r\n    // Who is next 'x' or '0'?\r\n    // Refresh state\r\n    setBoard(copyBoard)\r\n    setXIsNext(!xIsNext)\r\n    \r\n    if (xIsNext) {\r\n      setXCount(xcount + 33.33)\r\n      localStorage.setItem(user1, Math.round(xcount + 33.33));\r\n    }\r\n    if (!xIsNext) {\r\n      setCount(count + 33.33)\r\n      localStorage.setItem(user2, Math.round(count + 33.33));\r\n    }\r\n  }\r\n\r\n \r\n\r\n  const card = {\r\n    height: '85vh',\r\n    marginBottom: '2px'\r\n  }\r\n  const startNewGame = () => {\r\n    return (\r\n      // <button className='startBtn' onClick={() => setBoard(Array(9).fill(null))}><p onClick={() => setXCount(0)}><p onClick={() => setCount(0)}><p onClick={() => localStorage.clear()}><p onClick={() => localStorage.clear()}>Clear field</p></p></p></p></button>\r\n      <button className='startBtn' onClick={() => setBoard(Array(9).fill(null))}><div onClick={() => setXCount(0)}><div onClick={() => setCount(0)}><div onClick={() => localStorage.clear()}><div onClick={() => localStorage.clear()}>Clear field</div></div></div></div></button>\r\n      )\r\n  }\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"card w-96 text-primary-content\">\r\n        <div className='plannerstyle' style={{ backgroundImage: `url(${background})` }}>\r\n          <div className=\"card-body\" style={card}>\r\n            <h2 className=\"card-title\"></h2>\r\n            <div className='wrapper'>\r\n              {startNewGame()}\r\n              <Board squares={board} click={clickHandler} />\r\n              <p className='gameInfo'>{winner || draw ? \r\n              (winner ? localStorage.setItem('Winner' , winner): localStorage.setItem(\"Draw\" , draw )) +\r\n              // (winner ? localStorage.setItem('Winners' , winner): localStorage.setItem(\"Draw\" , draw )) +\r\n              'Winner: ' + navigate('/data') : \r\n              'Next step: ' + (xIsNext ? user1 : user2)}\r\n              </p>\r\n            </div>\r\n            <div className=\"card-actions justify-end\"></div>\r\n            <div className=\"result1\">\r\n              <p className='gameInfo'>{user1+': ' + localStorage.getItem('XScore')+' won'}</p>\r\n            </div>\r\n            <div className=\"result2\">\r\n              <p className='gameInfo'>{user2+': ' + localStorage.getItem('Score')+' won'}</p>\r\n            </div>\r\n            <div className=\"result3\">\r\n              <p className='gameInfo'>{'Draw: ' + localStorage.getItem('DrawScore')}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Data.jsx",["93","94"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport background from '../images/treasuremap.png'\r\nimport shipPic from '../images/ship.png'\r\nimport pirategirlPic from '../images/pirategirl.png'\r\nimport { AppContext } from \"../App\";\r\nimport { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nconst Data = () => {\r\n  const {user1} = useContext(AppContext)\r\n  const {user2} = useContext(AppContext)\r\n  const navigate = useNavigate();\r\n    function previous() {\r\n      navigate('/home')\r\n    }\r\n    function next() {\r\n      navigate('/result')\r\n    }\r\n    const card = {\r\n      height: '85vh',\r\n      marginBottom: '2px'\r\n    }\r\n    return (\r\n      <div className=\"\">\r\n      <div className=\"card w-96 text-primary-content\">\r\n        <div className='plannerstyle' style={{ backgroundImage: `url(${background})` }}>\r\n        <div className=\"card-body\" style={card}>\r\n          <h2 className=\"card-title\"></h2>\r\n          <div className='showResult'>\r\n          <p className='gameResult'>{localStorage.getItem('Winners') ? 'Winner: ' + localStorage.getItem('Winners') : 'Draw'}</p> \r\n        </div> \r\n          <div className=\"buttons\">  \r\n          <button onClick={previous} className=\"btn2\">\r\n          <img src={shipPic} alt=\"\" />\r\n          </button>\r\n          <div className=\"res\">\r\n          <p className='gameSteps'>Highscore:</p> \r\n          <div className=\"res1\">\r\n          <p className='gameInfo'>{user1+': '+localStorage.getItem(user1)+ \" diamond's\"}</p> \r\n          </div>\r\n          <div className=\"res2\">\r\n          <p className='gameInfo'>{user2+': '+localStorage.getItem(user2)+ \" diamond's\"}</p> \r\n          </div>\r\n          </div>\r\n          <button onClick={next} className=\"btn2\">\r\n          <img src={pirategirlPic} alt=\"\" /> \r\n          </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Data;\r\n\r\n","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Home.jsx",["95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AppContext } from \"../App\";\r\nimport { useContext } from \"react\";\r\nimport background from '../images/main.png'\r\nimport shipPic from '../images/ship.png'\r\nimport pirategirlPic from '../images/pirategirl.png'\r\nimport { useState } from \"react\";\r\nfunction Home() {\r\n  const {setUser1} = useContext(AppContext)\r\n  const {setUser2} = useContext(AppContext)\r\n  // const {setWin} = useContext(AppContext)\r\n  const navigate = useNavigate();\r\n  // Get data from localStorage\r\n  let users = ['Computer']\r\n  if(localStorage.getItem('User')){\r\n    users.push(localStorage.getItem('User'))\r\n  }\r\n  // Separate data by coma and put it to array 'user' like elements of new array\r\n      const user = users.map((i) => (\r\n            i.split(',')\r\n          ))\r\n  function next() {\r\n    navigate('/data')\r\n  }\r\n  const card = {\r\n    height: '85vh',\r\n    marginBottom: '2px'\r\n  }\r\n\r\n  function submitHandler(e) {\r\n    e.preventDefault();\r\n    if (\r\n      e.target.userSelect1.value == \"Select participant\" && e.target.userSelect2.value == \"Select participant\"\r\n    ) {\r\n      alert(\"Please select participant\");\r\n      return;\r\n    }\r\n    if (\r\n      e.target.userSelect1.value == \"Select participant\" || e.target.userSelect2.value == \"Select participant\"\r\n    ) {\r\n      alert(\"Please select next participant\");\r\n      return;\r\n    }\r\n    // if( e.target.userSelect1.value === 'Computer' ||  e.target.userSelect1.value === 'Computer' \r\n    // &&  e.target.userSelect1.value !=\"Select participant\" || e.target.userSelect2.value !=\"Select participant\")\r\n    // {\r\n    //     navigate('/ai')\r\n    // }\r\n    const foundUser1 = e.target.userSelect1.value\r\n    const foundUser2 = e.target.userSelect2.value\r\n    // const winner = localStorage.getItem('Winner')\r\n    {\r\n      if (foundUser1 !='Computer' && foundUser2 !='Computer') {\r\n        setUser1(foundUser1)\r\n        setUser2(foundUser2)\r\n        navigate('/game')\r\n        // alert(\"Participant selected \"+foundUser);\r\n        console.log(foundUser1);\r\n        console.log(foundUser2);\r\n        return foundUser1 && foundUser2\r\n      }\r\n      else if( foundUser1 === 'Computer' ||  foundUser2 === 'Computer' \r\n      &&  foundUser1 !=\"Select participant\" || foundUser2 !=\"Select participant\")\r\n      {\r\n          navigate('/aiGame')\r\n      }\r\n      // User VS Computer\r\n      \r\n      // if(winner && foundUser1 || winner && foundUser2){\r\n      //   localStorage.setItem('Data', winner)\r\n      //   console.log(winner);\r\n      // }\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"card w-96 text-primary-content\">\r\n        <div className='plannerstyle' style={{ backgroundImage: `url(${background})` }}>\r\n          <div className=\"card-body\" style={card}>\r\n            <h2 className=\"card-title\"></h2>\r\n            <div className=\"home-buttons\">\r\n              <form className=\"form\" onSubmit={submitHandler}>\r\n                    <select name=\"userSelect1\" className=\"select w-24\">\r\n                      <option disabled selected>Select participant</option> \r\n                      {/* <option>Computer</option> */}\r\n{/* Pass data to selector */}\r\n                        {user.map((i) => (\r\n                        i.map((j) => (\r\n                          <option>{j}</option>\r\n                          )) \r\n                      ))}  \r\n                    </select>\r\n                  <div className=\"user-choice\">\r\n                  <button type=\"submit\" className=\"btn1\">\r\n                  <h1>Start</h1>\r\n                </button>\r\n                  </div>\r\n                  <select name=\"userSelect2\" className=\"select w-24\">\r\n                      <option disabled selected>Select participant</option> \r\n                      {/* <option>Computer</option> */}\r\n{/* Pass data to selector */}\r\n                        {user.map((i) => (\r\n                        i.map((j) => (\r\n                          <option>{j}</option>\r\n                          )) \r\n                      ))}  \r\n                    </select>\r\n                {/* <div className=\"choice-form\">\r\n                <button onClick={next} className=\"btn2\">\r\n                  <img src={pirategirlPic} alt=\"\" />\r\n                </button>\r\n                </div> */}\r\n              </form>\r\n            </div>\r\n            <div className=\"card-actions justify-end\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Login.jsx",["111"],[],"import React from 'react'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from 'react';\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  let users = []\r\n  const [user, setUser] = useState(users)\r\n  if(localStorage.getItem('User')){\r\n    users.push(localStorage.getItem('User'))\r\n  }\r\n\r\n  function submitHandler(e){\r\n    e.preventDefault();\r\n    if (\r\n      e.target.name.value === 'Please enter your name' \r\n    ) \r\n    {\r\n      alert(\"Please enter particapant's name\");\r\n      return;\r\n    }\r\n    const found = e.target.name.value\r\n    \r\n    {\r\n      if (found){\r\n      const copyUser = [...user]\r\n      copyUser.push(found)\r\n      localStorage.setItem('User', copyUser)\r\n      setUser(copyUser)\r\n      return found\r\n    }\r\n    }\r\n  }\r\n  const bStyle = {\r\n    width: '160px',\r\n    gap: '20px'\r\n  }\r\n  function home() {\r\n    navigate('/home')\r\n  }\r\n  return (\r\n    <div className=\"card w-96 bg-primary text-primary-content\">\r\n  <div className=\"card-body\">\r\n    <h2 className=\"card-title\">New participant</h2>\r\n    <form onSubmit={submitHandler}>\r\n        <input type='text' name='name'\r\n        placeholder='Please enter your name'\r\n        className='input input-bordered w-full max-w-xs'/>\r\n      <button onClick={home} type=\"submit\" className=\"btn\" style={bStyle}>Home/Start</button> \r\n      <button className=\"btn\" style={bStyle}>Add user</button> \r\n      </form>\r\n    <div className=\"card-actions justify-end\">\r\n    </div>\r\n  </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default Login","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\winCalc.jsx",[],[],"C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Board.jsx",[],[],"C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\Square.jsx",[],[],"C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\AI.jsx",["112","113","114","115"],[],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"react-modal\";\r\nimport Board from \"./AiBoard\";\r\nimport { css } from \"styled-components\";\r\nimport { AppContext } from \"../App\";\r\nimport { useContext } from \"react\";\r\n\r\nimport {\r\n  PLAYER_X,\r\n  PLAYER_O,\r\n  SQUARE_DIMS,\r\n  DRAW,\r\n  GAME_STATES,\r\n  DIMS,\r\n  GAME_MODES,\r\n  getRandomInt,\r\n  switchPlayer,\r\n  minimax\r\n} from \"./AiBoard\";\r\n\r\n\r\nexport const border = css`\r\n  border-bottom-left-radius: 15px 255px;\r\n  border-bottom-right-radius: 225px 15px;\r\n  border-top-left-radius: 255px 15px;\r\n  border-top-right-radius: 15px 225px;\r\n  border: 2px solid #41403e;\r\n`;\r\nconst arr = new Array(DIMS ** 2).fill(null);\r\nconst board = new Board();\r\n\r\nconst TicTacToe = ({ squares = arr }) => {\r\n  const [players, setPlayers] = useState({ human: null, computer: null });\r\n  const [gameState, setGameState] = useState(GAME_STATES.notStarted);\r\n  const [grid, setGrid] = useState(squares);\r\n  const [winner, setWinner] = useState(null);\r\n  const [nextMove, setNextMove] = useState(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [mode, setMode] = useState(GAME_MODES.medium);\r\n  const { user1 } = useContext(AppContext)\r\n  const { user2 } = useContext(AppContext)\r\n\r\n\r\n  /**\r\n   * On every move, check if there is a winner. If yes, set game state to over and open result modal\r\n   */\r\n  useEffect(() => {\r\n    const winner = board.getWinner(grid);\r\n    const declareWinner = winner => {\r\n      let winnerStr;\r\n      switch (winner) {\r\n        case PLAYER_X:\r\n          winnerStr = \"Player X wins!\";\r\n          break;\r\n        case PLAYER_O:\r\n          winnerStr = \"Player O wins!\";\r\n          break;\r\n        case DRAW:\r\n        default:\r\n          winnerStr = \"It's a draw\";\r\n      }\r\n      setGameState(GAME_STATES.over);\r\n      setWinner(winnerStr);\r\n      // Slight delay for the modal so there is some time to see the last move\r\n      setTimeout(() => setModalOpen(true), 300);\r\n    };\r\n\r\n    if (winner !== null && gameState !== GAME_STATES.over) {\r\n      declareWinner(winner);\r\n    }\r\n  }, [gameState, grid, nextMove]);\r\n\r\n  /*\r\n   * Set the grid square with respective player that made the move. Only make a move when the game is in progress.\r\n   * useCallback is necessary to prevent unnecessary recreation of the function, unless gameState changes, since it is\r\n   * being tracked in useEffect\r\n   */\r\n  const move = useCallback(\r\n    (index, player) => {\r\n      if (player && gameState === GAME_STATES.inProgress) {\r\n        setGrid(grid => {\r\n          const gridCopy = grid.concat();\r\n          gridCopy[index] = player;\r\n          return gridCopy;\r\n        });\r\n      }\r\n    },\r\n    [gameState]\r\n  );\r\n\r\n  /*\r\n   * Make computer move. If it's the first move (board is empty), make move at any random cell to skip\r\n   * unnecessary minimax calculations\r\n   */\r\n  const computerMove = useCallback(() => {\r\n    // Important to pass a copy of the grid here\r\n    const board = new Board(grid.concat());\r\n    const emptyIndices = board.getEmptySquares(grid);\r\n    let index;\r\n    switch (mode) {\r\n      case GAME_MODES.easy:\r\n        do {\r\n          index = getRandomInt(0, 8);\r\n        } while (!emptyIndices.includes(index));\r\n        break;\r\n      case GAME_MODES.medium:\r\n        // Medium level is basically ~half of the moves are minimax and the other ~half random\r\n        const smartMove = !board.isEmpty(grid) && Math.random() < 0.5;\r\n        if (smartMove) {\r\n          index = minimax(board, players.computer)[1];\r\n        } else {\r\n          do {\r\n            index = getRandomInt(0, 8);\r\n          } while (!emptyIndices.includes(index));\r\n        }\r\n        break;\r\n      case GAME_MODES.difficult:\r\n      default:\r\n        index = board.isEmpty(grid)\r\n          ? getRandomInt(0, 8)\r\n          : minimax(board, players.computer)[1];\r\n    }\r\n    if (!grid[index]) {\r\n      move(index, players.computer);\r\n      setNextMove(players.human);\r\n    }\r\n  }, [move, grid, players, mode]);\r\n\r\n  /**\r\n   * Make computer move when it's computer's turn\r\n   */\r\n  useEffect(() => {\r\n    let timeout;\r\n    if (\r\n      nextMove !== null &&\r\n      nextMove === players.computer &&\r\n      gameState !== GAME_STATES.over\r\n    ) {\r\n      // Delay computer moves to make them more natural\r\n      timeout = setTimeout(() => {\r\n        computerMove();\r\n      }, 500);\r\n    }\r\n    return () => timeout && clearTimeout(timeout);\r\n  }, [nextMove, computerMove, players.computer, gameState]);\r\n\r\n  const humanMove = index => {\r\n    if (!grid[index] && nextMove === players.human) {\r\n      move(index, players.human);\r\n      setNextMove(players.computer);\r\n    }\r\n  };\r\n\r\n  const choosePlayer = option => {\r\n    setPlayers({ human: option, computer: switchPlayer(option) });\r\n    setGameState(GAME_STATES.inProgress);\r\n    setNextMove(PLAYER_X);\r\n  };\r\n\r\n  const startNewGame = () => {\r\n    setGameState(GAME_STATES.notStarted);\r\n    setGrid(arr);\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const changeMode = e => {\r\n    setMode(e.target.value);\r\n  };\r\n  const card = {\r\n    height: '85vh',\r\n    marginBottom: '2px'\r\n  }\r\n\r\n  return gameState === GAME_STATES.notStarted ? (\r\n    <div className=\"screen\">\r\n      <div className=\"inner\">\r\n      <div className=\"inside1\">\r\n        <p>Choose play item</p>\r\n        <div className=\"buttonRow\">\r\n          <button className=\"aiBtn1\" onClick={() => choosePlayer(PLAYER_X)}>X</button>\r\n      <div className=\"inside2\">\r\n        <p>Select level</p>\r\n        <select onChange={changeMode} value={mode}>\r\n          {Object.keys(GAME_MODES).map(key => {\r\n            const gameMode = GAME_MODES[key];\r\n            return (\r\n              <option key={gameMode} value={gameMode}>\r\n                {key}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n          <button className=\"aiBtn2\" onClick={() => choosePlayer(PLAYER_O)}>O</button>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"styleContainer\" dims={DIMS}>\r\n      {grid.map((value, index) => {\r\n        const isActive = value !== null;\r\n\r\n        return (\r\n          <div className=\"styleSquares\"\r\n            data-testid={`square_${index}`}\r\n            key={index}\r\n            onClick={() => humanMove(index)}\r\n          >\r\n            {isActive && <div className=\"marker\">{value === PLAYER_X ? \"X\" : \"O\"}</div>}\r\n          </div>\r\n        );\r\n      })}\r\n      <Strikethrough \r\n        styles={\r\n          gameState === GAME_STATES.over && board.getStrikethroughStyles()\r\n        }\r\n      />\r\n       {/* <div className=\"strikethrough\" \r\n        styles={\r\n          gameState === GAME_STATES.over && board.getStrikethroughStyles()\r\n        }\r\n      /> */}\r\n      <ResultModal\r\n        isOpen={modalOpen}\r\n        winner={winner}\r\n        close={() => setModalOpen(false)}\r\n        startNewGame={startNewGame}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n// const style ={\r\n//   position: 'absolute',\r\n//   backgroundColor: 'indianred',\r\n//   height: '5px',\r\n//   width: '350px',\r\n//   display: 'block'\r\n// }\r\nconst Strikethrough = styled.div`\r\n  position: absolute;\r\n  ${({ styles }) => styles}\r\n  background-color: indianred;\r\n  height: 5px;\r\n  width: ${({ styles }) => !styles && \"0px\"};\r\n`;\r\n\r\nexport default TicTacToe;\r\n// Result\r\nconst customStyles = {\r\n  overlay: {\r\n    backgroundColor: \"rgba(0,0,0, 0.6)\"\r\n   \r\n  }\r\n};\r\n\r\nexport const ResultModal = ({ isOpen, close, startNewGame, winner }) => {\r\n\r\n  return (\r\n    <StyledModal\r\n      isOpen={isOpen}\r\n      onRequestClose={close}\r\n      style={customStyles}\r\n      ariaHideApp={false}\r\n    >\r\n      {/* <Main>\r\n      </Main> */}\r\n      <Footer>\r\n        <FooterInner>\r\n          View the code on{\" \"}\r\n          <a href='https://github.com/SergeyOlefirenko/Tic-tac-toe'>Github</a>\r\n        </FooterInner>\r\n      </Footer>\r\n      <ModalWrapper>\r\n        <ModalTitle>Game over</ModalTitle>\r\n        <ModalContent>{winner}</ModalContent>\r\n\r\n        <ModalFooter>\r\n          <Button onClick={close}>Close</Button>\r\n          <Button onClick={startNewGame}>Start over</Button>\r\n        </ModalFooter>\r\n      </ModalWrapper>\r\n    </StyledModal>\r\n  );\r\n};\r\n\r\n\r\n// Game over style\r\nconst Footer = styled.footer`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  flex: 0 0 auto;\r\n`;\r\n\r\nconst FooterInner = styled.div`\r\n  padding: 16px 0;\r\n`;\r\nconst StyledModal = styled(Modal)`\r\n  height: 300px;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  top: 10%;\r\n  right: auto;\r\n  bottom: auto;\r\n  width: 320px;\r\n  outline: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst ModalWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 24px;\r\n  background-color: #fff;\r\n  max-height: 100%;\r\n  height: 100%;\r\n  align-items: center;\r\n  backface-visibility: hidden;\r\n  padding: 1.25rem;\r\n  ${border};\r\n`;\r\n\r\n// Game over styles\r\n\r\nconst ModalTitle = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n`;\r\n\r\nconst ModalContent = styled.p`\r\n  flex: 1 1 auto;\r\n  text-align: center;\r\n`;\r\n// ModalContent.displayName = \"ModalContent\";\r\n\r\nconst ModalFooter = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex: 0 0 auto;\r\n  width: 100%;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 16px;\r\n`;\r\n","C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\AiBoard.jsx",[],[],"C:\\Users\\olefi\\OneDrive\\Рабочий стол\\tictactoereact\\src\\components\\AiGame.jsx",["116","117","118","119","120","121","122"],[],"import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport background from '../images/game.png'\r\nimport AI from \"./AI\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nconst AiGame = () => {\r\n  const [board, setBoard] = useState(Array(9).fill(null))\r\n  const [xIsNext, setXIsNext] = useState(true)\r\n  const [xcount, setXCount] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n \r\n  const card = {\r\n    height: '85vh',\r\n    marginBottom: '2px'\r\n  }\r\n  const startNewGame = () => {\r\n    return (\r\n      // <button className='startBtn' onClick={() => setBoard(Array(9).fill(null))}><p onClick={() => setXCount(0)}><p onClick={() => setCount(0)}><p onClick={() => localStorage.clear()}><p onClick={() => localStorage.clear()}>Clear field</p></p></p></p></button>\r\n      <button className='startBtn' onClick={() => setBoard(Array(9).fill(null))}><div onClick={() => setXCount(0)}><div onClick={() => setCount(0)}><div onClick={() => localStorage.clear()}><div onClick={() => localStorage.clear()}>Clear field</div></div></div></div></button>\r\n      )\r\n  }\r\n  return (\r\n      <div className=\"card w-96 text-primary-content\">\r\n        <div className='plannerstyle' style={{ backgroundImage: `url(${background})` }}>\r\n          <div className=\"card-body\" style={card}>\r\n            <h2 className=\"card-title\"></h2>\r\n            <div className='wrapper'>\r\n              {startNewGame()}\r\n              <AI/>\r\n            </div>\r\n            <div className=\"card-actions justify-end\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default AiGame;",{"ruleId":"123","severity":1,"message":"124","line":6,"column":25,"nodeType":"125","messageId":"126","endLine":6,"endColumn":31},{"ruleId":"123","severity":1,"message":"127","line":6,"column":33,"nodeType":"125","messageId":"126","endLine":6,"endColumn":38},{"ruleId":"123","severity":1,"message":"128","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":14},{"ruleId":"123","severity":1,"message":"129","line":12,"column":20,"nodeType":"125","messageId":"126","endLine":12,"endColumn":29},{"ruleId":"123","severity":1,"message":"130","line":40,"column":10,"nodeType":"125","messageId":"126","endLine":40,"endColumn":17},{"ruleId":"131","severity":1,"message":"132","line":56,"column":5,"nodeType":"133","endLine":56,"endColumn":69},{"ruleId":"134","severity":1,"message":"135","line":65,"column":11,"nodeType":"133","endLine":65,"endColumn":58},{"ruleId":"131","severity":1,"message":"132","line":70,"column":11,"nodeType":"133","endLine":70,"endColumn":60},{"ruleId":"131","severity":1,"message":"132","line":75,"column":13,"nodeType":"133","endLine":75,"endColumn":35},{"ruleId":"131","severity":1,"message":"132","line":76,"column":13,"nodeType":"133","endLine":76,"endColumn":57},{"ruleId":"131","severity":1,"message":"132","line":78,"column":13,"nodeType":"133","endLine":78,"endColumn":33},{"ruleId":"131","severity":1,"message":"132","line":111,"column":5,"nodeType":"133","endLine":111,"endColumn":8},{"ruleId":"131","severity":1,"message":"132","line":113,"column":5,"nodeType":"133","endLine":113,"endColumn":8},{"ruleId":"131","severity":1,"message":"132","line":114,"column":5,"nodeType":"133","endLine":114,"endColumn":8},{"ruleId":"123","severity":1,"message":"129","line":9,"column":10,"nodeType":"125","messageId":"126","endLine":9,"endColumn":19},{"ruleId":"123","severity":1,"message":"136","line":21,"column":10,"nodeType":"125","messageId":"126","endLine":21,"endColumn":16},{"ruleId":"123","severity":1,"message":"137","line":21,"column":18,"nodeType":"125","messageId":"126","endLine":21,"endColumn":27},{"ruleId":"123","severity":1,"message":"138","line":22,"column":10,"nodeType":"125","messageId":"126","endLine":22,"endColumn":15},{"ruleId":"123","severity":1,"message":"139","line":22,"column":17,"nodeType":"125","messageId":"126","endLine":22,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":42,"column":13,"nodeType":"142","messageId":"143","endLine":42,"endColumn":15},{"ruleId":"140","severity":1,"message":"141","line":52,"column":16,"nodeType":"142","messageId":"143","endLine":52,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":148,"column":13,"nodeType":"133","endLine":148,"endColumn":40},{"ruleId":"123","severity":1,"message":"146","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":18},{"ruleId":"144","severity":1,"message":"145","line":30,"column":11,"nodeType":"133","endLine":30,"endColumn":38},{"ruleId":"123","severity":1,"message":"147","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":15},{"ruleId":"123","severity":1,"message":"148","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":21},{"ruleId":"123","severity":1,"message":"146","line":8,"column":10,"nodeType":"125","messageId":"126","endLine":8,"endColumn":18},{"ruleId":"123","severity":1,"message":"149","line":23,"column":12,"nodeType":"125","messageId":"126","endLine":23,"endColumn":16},{"ruleId":"140","severity":1,"message":"141","line":34,"column":34,"nodeType":"142","messageId":"143","endLine":34,"endColumn":36},{"ruleId":"140","severity":1,"message":"141","line":34,"column":88,"nodeType":"142","messageId":"143","endLine":34,"endColumn":90},{"ruleId":"140","severity":1,"message":"141","line":40,"column":34,"nodeType":"142","messageId":"143","endLine":40,"endColumn":36},{"ruleId":"140","severity":1,"message":"141","line":40,"column":88,"nodeType":"142","messageId":"143","endLine":40,"endColumn":90},{"ruleId":"150","severity":1,"message":"151","line":53,"column":5,"nodeType":"152","messageId":"153","endLine":74,"endColumn":6},{"ruleId":"140","severity":1,"message":"154","line":54,"column":22,"nodeType":"142","messageId":"143","endLine":54,"endColumn":24},{"ruleId":"140","severity":1,"message":"154","line":54,"column":49,"nodeType":"142","messageId":"143","endLine":54,"endColumn":51},{"ruleId":"155","severity":1,"message":"156","line":63,"column":42,"nodeType":"157","messageId":"158","endLine":63,"endColumn":44},{"ruleId":"155","severity":1,"message":"156","line":64,"column":7,"nodeType":"157","messageId":"158","endLine":64,"endColumn":9},{"ruleId":"140","severity":1,"message":"154","line":64,"column":22,"nodeType":"142","messageId":"143","endLine":64,"endColumn":24},{"ruleId":"140","severity":1,"message":"154","line":64,"column":59,"nodeType":"142","messageId":"143","endLine":64,"endColumn":61},{"ruleId":"144","severity":1,"message":"145","line":81,"column":13,"nodeType":"133","endLine":81,"endColumn":40},{"ruleId":"150","severity":1,"message":"151","line":24,"column":5,"nodeType":"152","messageId":"153","endLine":32,"endColumn":6},{"ruleId":"123","severity":1,"message":"159","line":12,"column":3,"nodeType":"125","messageId":"126","endLine":12,"endColumn":14},{"ruleId":"123","severity":1,"message":"160","line":41,"column":11,"nodeType":"125","messageId":"126","endLine":41,"endColumn":16},{"ruleId":"123","severity":1,"message":"161","line":42,"column":11,"nodeType":"125","messageId":"126","endLine":42,"endColumn":16},{"ruleId":"123","severity":1,"message":"162","line":170,"column":9,"nodeType":"125","messageId":"126","endLine":170,"endColumn":13},{"ruleId":"123","severity":1,"message":"163","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":21},{"ruleId":"123","severity":1,"message":"164","line":10,"column":10,"nodeType":"125","messageId":"126","endLine":10,"endColumn":15},{"ruleId":"123","severity":1,"message":"165","line":11,"column":10,"nodeType":"125","messageId":"126","endLine":11,"endColumn":17},{"ruleId":"123","severity":1,"message":"166","line":11,"column":19,"nodeType":"125","messageId":"126","endLine":11,"endColumn":29},{"ruleId":"123","severity":1,"message":"167","line":12,"column":10,"nodeType":"125","messageId":"126","endLine":12,"endColumn":16},{"ruleId":"123","severity":1,"message":"168","line":13,"column":10,"nodeType":"125","messageId":"126","endLine":13,"endColumn":15},{"ruleId":"144","severity":1,"message":"145","line":29,"column":13,"nodeType":"133","endLine":29,"endColumn":40},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'styled' is defined but never used.","'useEffect' is defined but never used.","'history' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'xscore' is assigned a value but never used.","'setXScore' is assigned a value but never used.","'score' is assigned a value but never used.","'setScore' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'useState' is defined but never used.","'shipPic' is defined but never used.","'pirategirlPic' is defined but never used.","'next' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Expected '!==' and instead saw '!='.","no-mixed-operators","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'SQUARE_DIMS' is defined but never used.","'user1' is assigned a value but never used.","'user2' is assigned a value but never used.","'card' is assigned a value but never used.","'useNavigate' is defined but never used.","'board' is assigned a value but never used.","'xIsNext' is assigned a value but never used.","'setXIsNext' is assigned a value but never used.","'xcount' is assigned a value but never used.","'count' is assigned a value but never used."]