{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olefi\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\tictactoereact\\\\src\\\\components\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport background from '../images/game.png';\nimport Board from './Board';\nimport { useState } from 'react';\nimport { winCalc } from '../winCalc';\nimport { AppContext } from \"../App\";\nimport { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const {\n    user1\n  } = useContext(AppContext);\n  const {\n    user2\n  } = useContext(AppContext);\n  const navigate = useNavigate();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [xcount, setXCount] = useState(0);\n  const [count, setCount] = useState(0);\n  const [xscore, setXScore] = useState(localStorage.getItem('XScore'));\n  const [score, setScore] = useState(localStorage.getItem('Score'));\n  const [drawScore, setDrawScore] = useState(localStorage.getItem('DrawScore'));\n  const [draw, setDraw] = useState(false);\n  const winner = winCalc(board);\n  // User VS Computer\n  if (user1 === 'Computer' || user2 === 'Computer') {\n    playAI();\n  }\n  const playComputer = index => {\n    const copyBoard = [...board];\n    // Already clicked or not\n    if (copyBoard[index]) {\n      return;\n    }\n    copyBoard[index] = xIsNext ? 'X' : '0';\n    // Who is next 'x' or '0'?\n    // Refresh state\n    setBoard(copyBoard);\n    setXIsNext(!xIsNext);\n    if (xIsNext) {\n      setXCount(xcount + 33.33);\n      localStorage.setItem(user1, Math.round(xcount + 33.33));\n    }\n    if (!xIsNext) {\n      setCount(count + 33.33);\n      localStorage.setItem(user2, Math.round(count + 33.33));\n    }\n  };\n\n  //   if(winner == 'X'){\n  //     let copy = [localStorage.getItem('Storage')]\n  //     copy.push(user1)\n  //     console.log(copy);\n  //     localStorage.setItem('Storage', copy)\n  //   }\n  // else if(winner == '0'){\n  //     let copy = [localStorage.getItem('Storage')]\n  //     copy.push(user2)\n  //     console.log(copy);\n  //     localStorage.setItem('Storage', copy)\n  //   }\n\n  if (winner == 'X') {\n    let copy = [localStorage.getItem('Storage')];\n    copy.push(user1);\n    const element = copy.map(i => i.split(','));\n    console.log(element);\n    localStorage.setItem('Storage', element);\n  } else if (winner == '0') {\n    let copy = [localStorage.getItem('Storage')];\n    copy.push(user2);\n    const element = copy.map(i => i.split(','));\n    console.log(element);\n    localStorage.setItem('Storage', element);\n  }\n\n  // const element = copy.map((i) => (\n  //   i.split(',')\n  // ))\n  // console.log(element);\n  //     localStorage.setItem('Storage', element)\n\n  // Draw checker\n  if (!winner && !board.includes(null)) {\n    setDraw(true);\n    localStorage.removeItem('Winners');\n    localStorage.setItem(user1, 0);\n    localStorage.setItem(user2, 0);\n    setDrawScore(Number(drawScore));\n    localStorage.setItem('DrawScore', drawScore + 1);\n    setBoard(board);\n  }\n\n  // // User VS Computer\n  // if(user1 === 'Computer' || user2 === 'Computer'){\n\n  // }\n  const checkOpenCells = board => {\n    let copy = [...board];\n    return copy.reduce((open, tile, index) => {\n      if (tile === -9) {\n        open.push(index);\n      }\n      return open;\n    }, []);\n  };\n  const playAI = current_board => {\n    let boardCopy = [...current_board];\n    const open_tiles = checkOpenCells(boardCopy);\n    // This is avaliable space\n    if (open_tiles.length) {\n      const rand = Math.random() * open_tiles.length;\n      return open_tiles[Math.floor(rand)];\n    }\n    return null;\n  };\n\n  // WinChecker\n  // if(winner === 'X'){\n  //   setXCount(xcount + 4.5)\n  //   localStorage.setItem(user1, Math.round(xcount + 4.5)); \n  //   localStorage.setItem('Winners', user1)\n  //   setXScore(Number(xscore))\n  //   localStorage.setItem('XScore', Number(xscore+1))\n  //   localStorage.removeItem('Draw'); \n  // }\n\n  // if(winner === '0'){\n  //     setCount(count + 4.5)\n  //     localStorage.setItem(user2, Math.round(count + 4.5));\n  //     localStorage.setItem('Winners', user2)\n  //     setScore(Number(score))\n  //     localStorage.setItem('Score', Number(score+1))\n  //     localStorage.removeItem('Draw');\n  //   }\n\n  const clickHandler = index => {\n    const copyBoard = [...board];\n    // Already clicked or not\n    if (copyBoard[index]) {\n      return;\n    }\n    copyBoard[index] = xIsNext ? 'X' : '0';\n    // Who is next 'x' or '0'?\n    // Refresh state\n    setBoard(copyBoard);\n    setXIsNext(!xIsNext);\n    if (xIsNext) {\n      setXCount(xcount + 33.33);\n      localStorage.setItem(user1, Math.round(xcount + 33.33));\n    }\n    if (!xIsNext) {\n      setCount(count + 33.33);\n      localStorage.setItem(user2, Math.round(count + 33.33));\n    }\n  };\n  const card = {\n    height: '85vh',\n    marginBottom: '2px'\n  };\n  const startNewGame = () => {\n    return (\n      /*#__PURE__*/\n      // <button className='startBtn' onClick={() => setBoard(Array(9).fill(null))}><p onClick={() => setXCount(0)}><p onClick={() => setCount(0)}><p onClick={() => localStorage.clear()}><p onClick={() => localStorage.clear()}>Clear field</p></p></p></p></button>\n      _jsxDEV(\"button\", {\n        className: \"startBtn\",\n        onClick: () => setBoard(Array(9).fill(null)),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setXCount(0),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCount(0),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => localStorage.clear(),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => localStorage.clear(),\n                children: \"Clear field\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 191\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 149\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 116\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 82\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this)\n    );\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-96 text-primary-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plannerstyle\",\n        style: {\n          backgroundImage: `url(${background})`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          style: card,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper\",\n            children: [startNewGame(), /*#__PURE__*/_jsxDEV(Board, {\n              squares: board,\n              click: clickHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"gameInfo\",\n              children: winner || draw ? (winner ? localStorage.setItem('Winner', winner) : localStorage.setItem(\"Draw\", draw)) +\n              // (winner ? localStorage.setItem('Winners' , winner): localStorage.setItem(\"Draw\" , draw )) +\n              'Winner: ' + navigate('/data') : 'Next step: ' + (xIsNext ? user1 : user2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-actions justify-end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result1\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"gameInfo\",\n              children: user1 + ': ' + localStorage.getItem('XScore') + ' won'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"gameInfo\",\n              children: user2 + ': ' + localStorage.getItem('Score') + ' won'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result3\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"gameInfo\",\n              children: 'Draw: ' + localStorage.getItem('DrawScore')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"5ERkyPjn3HFg0XejndFuEj/iSEs=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useNavigate","background","Board","useState","winCalc","AppContext","useContext","useEffect","Game","user1","user2","navigate","board","setBoard","Array","fill","xIsNext","setXIsNext","xcount","setXCount","count","setCount","xscore","setXScore","localStorage","getItem","score","setScore","drawScore","setDrawScore","draw","setDraw","winner","playAI","playComputer","index","copyBoard","setItem","Math","round","copy","push","element","map","i","split","console","log","includes","removeItem","Number","checkOpenCells","reduce","open","tile","current_board","boardCopy","open_tiles","length","rand","random","floor","clickHandler","card","height","marginBottom","startNewGame","clear","backgroundImage"],"sources":["C:/Users/olefi/OneDrive/Рабочий стол/tictactoereact/src/components/Game.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport background from '../images/game.png'\r\nimport Board from './Board';\r\nimport { useState } from 'react';\r\nimport { winCalc } from '../winCalc';\r\nimport { AppContext } from \"../App\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\n\r\nconst Game = () => {\r\n  const {user1} = useContext(AppContext)\r\n  const {user2} = useContext(AppContext)\r\n  const navigate = useNavigate();\r\n  const [board, setBoard] = useState(Array(9).fill(null))\r\n  const [xIsNext, setXIsNext] = useState(true)\r\n  const [xcount, setXCount] = useState(0);\r\n  const [count, setCount] = useState(0);\r\n  const [xscore, setXScore] = useState(localStorage.getItem('XScore'))\r\n  const [score, setScore] = useState(localStorage.getItem('Score'))\r\n  const [drawScore, setDrawScore] = useState(localStorage.getItem('DrawScore'))\r\n  const [draw, setDraw] = useState(false)\r\n  const winner = winCalc(board)\r\n      // User VS Computer\r\n      if(user1 === 'Computer' || user2 === 'Computer'){\r\n        playAI()\r\n        }\r\n\r\n        const playComputer = (index) => {\r\n          const copyBoard = [...board]\r\n          // Already clicked or not\r\n          if (copyBoard[index]) {\r\n            return\r\n          }\r\n          copyBoard[index] = xIsNext ? 'X' : '0'\r\n          // Who is next 'x' or '0'?\r\n          // Refresh state\r\n          setBoard(copyBoard)\r\n          setXIsNext(!xIsNext)\r\n          \r\n          if (xIsNext) {\r\n            setXCount(xcount + 33.33)\r\n            localStorage.setItem(user1, Math.round(xcount + 33.33));\r\n          }\r\n          if (!xIsNext) {\r\n            setCount(count + 33.33)\r\n            localStorage.setItem(user2, Math.round(count + 33.33));\r\n          }\r\n        }\r\n      \r\n\r\n//   if(winner == 'X'){\r\n//     let copy = [localStorage.getItem('Storage')]\r\n//     copy.push(user1)\r\n//     console.log(copy);\r\n//     localStorage.setItem('Storage', copy)\r\n//   }\r\n// else if(winner == '0'){\r\n//     let copy = [localStorage.getItem('Storage')]\r\n//     copy.push(user2)\r\n//     console.log(copy);\r\n//     localStorage.setItem('Storage', copy)\r\n//   }\r\n\r\n  if(winner == 'X'){\r\n    let copy = [localStorage.getItem('Storage')]\r\n    copy.push(user1)\r\n    const element = copy.map((i) => (\r\n  i.split(',')\r\n))\r\nconsole.log(element);\r\n\r\n    localStorage.setItem('Storage', element)\r\n  }\r\nelse if(winner == '0'){\r\n    let copy = [localStorage.getItem('Storage')]\r\n    copy.push(user2)\r\n    const element = copy.map((i) => (\r\n  i.split(',')\r\n))\r\nconsole.log(element);\r\n    localStorage.setItem('Storage', element)\r\n  }\r\n\r\n// const element = copy.map((i) => (\r\n//   i.split(',')\r\n// ))\r\n// console.log(element);\r\n//     localStorage.setItem('Storage', element)\r\n\r\n\r\n  // Draw checker\r\n  if (!winner && !board.includes(null)) {\r\n    setDraw(true)\r\n    localStorage.removeItem('Winners');\r\n    localStorage.setItem(user1, 0)\r\n    localStorage.setItem(user2, 0)\r\n    setDrawScore(Number(drawScore))\r\n    localStorage.setItem('DrawScore', drawScore+1)\r\n    setBoard(board)\r\n  }\r\n\r\n  // // User VS Computer\r\n  // if(user1 === 'Computer' || user2 === 'Computer'){\r\n\r\n  // }\r\n  const checkOpenCells = (board) =>{\r\n    let copy = [...board]\r\n    return copy.reduce((open, tile, index) =>{\r\n        if(tile === -9){\r\n            open.push(index);\r\n        }\r\n        return open;\r\n    },[])\r\n}\r\nconst playAI = (current_board) =>{\r\n    let boardCopy = [...current_board];\r\n    const open_tiles = checkOpenCells(boardCopy);\r\n    // This is avaliable space\r\n    if(open_tiles.length){\r\nconst rand = Math.random() * open_tiles.length;\r\nreturn open_tiles[Math.floor(rand)];\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n\r\n  // WinChecker\r\n  // if(winner === 'X'){\r\n  //   setXCount(xcount + 4.5)\r\n  //   localStorage.setItem(user1, Math.round(xcount + 4.5)); \r\n  //   localStorage.setItem('Winners', user1)\r\n  //   setXScore(Number(xscore))\r\n  //   localStorage.setItem('XScore', Number(xscore+1))\r\n  //   localStorage.removeItem('Draw'); \r\n  // }\r\n \r\n  // if(winner === '0'){\r\n  //     setCount(count + 4.5)\r\n  //     localStorage.setItem(user2, Math.round(count + 4.5));\r\n  //     localStorage.setItem('Winners', user2)\r\n  //     setScore(Number(score))\r\n  //     localStorage.setItem('Score', Number(score+1))\r\n  //     localStorage.removeItem('Draw');\r\n  //   }\r\n\r\n\r\n\r\n  const clickHandler = (index) => {\r\n    const copyBoard = [...board]\r\n    // Already clicked or not\r\n    if (copyBoard[index]) {\r\n      return\r\n    }\r\n    copyBoard[index] = xIsNext ? 'X' : '0'\r\n    // Who is next 'x' or '0'?\r\n    // Refresh state\r\n    setBoard(copyBoard)\r\n    setXIsNext(!xIsNext)\r\n    \r\n    if (xIsNext) {\r\n      setXCount(xcount + 33.33)\r\n      localStorage.setItem(user1, Math.round(xcount + 33.33));\r\n    }\r\n    if (!xIsNext) {\r\n      setCount(count + 33.33)\r\n      localStorage.setItem(user2, Math.round(count + 33.33));\r\n    }\r\n  }\r\n\r\n \r\n\r\n  const card = {\r\n    height: '85vh',\r\n    marginBottom: '2px'\r\n  }\r\n  const startNewGame = () => {\r\n    return (\r\n      // <button className='startBtn' onClick={() => setBoard(Array(9).fill(null))}><p onClick={() => setXCount(0)}><p onClick={() => setCount(0)}><p onClick={() => localStorage.clear()}><p onClick={() => localStorage.clear()}>Clear field</p></p></p></p></button>\r\n      <button className='startBtn' onClick={() => setBoard(Array(9).fill(null))}><div onClick={() => setXCount(0)}><div onClick={() => setCount(0)}><div onClick={() => localStorage.clear()}><div onClick={() => localStorage.clear()}>Clear field</div></div></div></div></button>\r\n      )\r\n  }\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"card w-96 text-primary-content\">\r\n        <div className='plannerstyle' style={{ backgroundImage: `url(${background})` }}>\r\n          <div className=\"card-body\" style={card}>\r\n            <h2 className=\"card-title\"></h2>\r\n            <div className='wrapper'>\r\n              {startNewGame()}\r\n              <Board squares={board} click={clickHandler} />\r\n              <p className='gameInfo'>{winner || draw ? \r\n              (winner ? localStorage.setItem('Winner' , winner): localStorage.setItem(\"Draw\" , draw )) +\r\n              // (winner ? localStorage.setItem('Winners' , winner): localStorage.setItem(\"Draw\" , draw )) +\r\n              'Winner: ' + navigate('/data') : \r\n              'Next step: ' + (xIsNext ? user1 : user2)}\r\n              </p>\r\n            </div>\r\n            <div className=\"card-actions justify-end\"></div>\r\n            <div className=\"result1\">\r\n              <p className='gameInfo'>{user1+': ' + localStorage.getItem('XScore')+' won'}</p>\r\n            </div>\r\n            <div className=\"result2\">\r\n              <p className='gameInfo'>{user2+': ' + localStorage.getItem('Score')+' won'}</p>\r\n            </div>\r\n            <div className=\"result3\">\r\n              <p className='gameInfo'>{'Draw: ' + localStorage.getItem('DrawScore')}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}