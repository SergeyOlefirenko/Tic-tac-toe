{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\exampletictactoe\\\\src\\\\components\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Board from './Board';\nimport { useState } from 'react';\nimport { winCalc } from '../winCalc';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const navigate = useNavigate();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = winCalc(board);\n  const clickHandler = index => {\n    const copyBoard = [...board];\n    // Already clicked or not\n    if (winner || copyBoard[index]) return;\n    // if (winner || copyBoard !=null) return\n    copyBoard[index] = xIsNext ? 'х' : '0';\n    // Who is next 'x' or '0'?\n    // Refresh state\n    setBoard(copyBoard);\n    setXIsNext(!xIsNext);\n  };\n  const startNewGame = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"startBtn\",\n      onClick: () => setBoard(Array(9).fill(null)),\n      children: \"Clear field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [startNewGame(), /*#__PURE__*/_jsxDEV(Board, {\n      squares: board,\n      click: clickHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"gameInfo\",\n      children: winner ? 'Winner: ' + winner : 'Next step: ' + (xIsNext ? 'х' : '0')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"44LMIsztspBEXgPdwgy7Rn9dHXQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","Board","useState","winCalc","useNavigate","Game","navigate","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","clickHandler","index","copyBoard","startNewGame"],"sources":["C:/Users/User/Desktop/exampletictactoe/src/components/Game.jsx"],"sourcesContent":["import React from 'react';\r\nimport Board from './Board';\r\nimport { useState } from 'react';\r\nimport { winCalc } from '../winCalc';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Game = () => {\r\n    const navigate = useNavigate();\r\n    const [board, setBoard] = useState(Array(9).fill(null))\r\n    const [xIsNext, setXIsNext] = useState(true)\r\n    const winner = winCalc(board)\r\n    const clickHandler = (index) => {\r\n        const copyBoard = [...board]\r\n        // Already clicked or not\r\n        if (winner || copyBoard[index]) return\r\n        // if (winner || copyBoard !=null) return\r\n        copyBoard[index] = xIsNext ? 'х' : '0'\r\n        // Who is next 'x' or '0'?\r\n        // Refresh state\r\n        setBoard(copyBoard)\r\n        setXIsNext(!xIsNext)\r\n    }\r\n    const startNewGame = ()=>{\r\n        return(\r\n            <button className='startBtn' onClick={()=> setBoard(Array(9).fill(null))}>Clear field</button>\r\n        )\r\n    }\r\n    return (\r\n        <div className='wrapper'>\r\n            {startNewGame()}\r\n          <Board squares={board} click={clickHandler}/> \r\n          <p className='gameInfo'>{winner ? 'Winner: '+winner : 'Next step: ' + (xIsNext ? 'х' : '0')}</p> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,OAAO,QAAQ,YAAY;AACpC,SAASC,WAAW,QAAQ,kBAAkB;AAAC;AAE/C,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAMC,QAAQ,GAAGF,WAAW,EAAE;EAC9B,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAACO,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACvD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMW,MAAM,GAAGV,OAAO,CAACI,KAAK,CAAC;EAC7B,MAAMO,YAAY,GAAIC,KAAK,IAAK;IAC5B,MAAMC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAAC;IAC5B;IACA,IAAIM,MAAM,IAAIG,SAAS,CAACD,KAAK,CAAC,EAAE;IAChC;IACAC,SAAS,CAACD,KAAK,CAAC,GAAGJ,OAAO,GAAG,GAAG,GAAG,GAAG;IACtC;IACA;IACAH,QAAQ,CAACQ,SAAS,CAAC;IACnBJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACxB,CAAC;EACD,MAAMM,YAAY,GAAG,MAAI;IACrB,oBACI;MAAQ,SAAS,EAAC,UAAU;MAAC,OAAO,EAAE,MAAKT,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAE;MAAA,UAAC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAS;EAEtG,CAAC;EACD,oBACI;IAAK,SAAS,EAAC,SAAS;IAAA,WACnBO,YAAY,EAAE,eACjB,QAAC,KAAK;MAAC,OAAO,EAAEV,KAAM;MAAC,KAAK,EAAEO;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE,eAC7C;MAAG,SAAS,EAAC,UAAU;MAAA,UAAED,MAAM,GAAG,UAAU,GAACA,MAAM,GAAG,aAAa,IAAIF,OAAO,GAAG,GAAG,GAAG,GAAG;IAAC;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAC5F;AAEd,CAAC;AAAA,GA5BKN,IAAI;EAAA,QACWD,WAAW;AAAA;AAAA,KAD1BC,IAAI;AA8BV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}