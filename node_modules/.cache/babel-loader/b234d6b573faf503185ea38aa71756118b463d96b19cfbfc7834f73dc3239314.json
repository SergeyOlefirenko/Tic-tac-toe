{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\exampletictactoe\\\\src\\\\components\\\\Game.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AppContext } from \"../App\";\nimport { useContext } from \"react\";\nimport background from '../images/game.png';\nimport shipPic from '../images/ship.png';\nimport pirategirlPic from '../images/pirategirl.png';\nimport Square from './Square';\nimport Board from './Board';\nimport { useState } from 'react';\n// import { winCalc } from '../winCalc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const navigate = useNavigate();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = winCalc(board);\n  const clickHandler = index => {\n    const copyBoard = [...board];\n    // Already clicked or not\n    if (winner || copyBoard[index]) return;\n    // if (winner || copyBoard !=null) return\n    copyBoard[index] = xIsNext ? 'х' : '0';\n    // Who is next 'x' or '0'?\n    // Refresh state\n    setBoard(copyBoard);\n    setXIsNext(!xIsNext);\n  };\n  function previous() {\n    navigate('/home');\n  }\n  function game() {\n    navigate('/result');\n  }\n  function next() {\n    navigate('/data');\n  }\n  const card = {\n    height: '85vh',\n    marginBottom: '2px'\n  };\n  const startNewGame = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"startBtn\",\n      onClick: () => setBoard(Array(9).fill(null)),\n      children: \"Clear field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card w-96 text-primary-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plannerstyle\",\n        style: {\n          backgroundImage: `url(${background})`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          style: card,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper\",\n            children: [startNewGame(), /*#__PURE__*/_jsxDEV(Board, {\n              squares: board,\n              click: clickHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"gameInfo\",\n              children: winner ? 'Winner: ' + winner : 'Next step: ' + (xIsNext ? 'х' : '0')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-actions justify-end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n  // return (\n  //     <div className='wrapper'>\n  //         {startNewGame()}\n  //       <Board squares={board} click={clickHandler}/> \n  //       <p className='gameInfo'>{winner ? 'Winner: '+winner : 'Next step: ' + (xIsNext ? 'х' : '0')}</p> \n  //     </div>\n  // );\n};\n_s(Game, \"44LMIsztspBEXgPdwgy7Rn9dHXQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useNavigate","AppContext","useContext","background","shipPic","pirategirlPic","Square","Board","useState","Game","navigate","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","winCalc","clickHandler","index","copyBoard","previous","game","next","card","height","marginBottom","startNewGame","backgroundImage"],"sources":["C:/Users/User/Desktop/exampletictactoe/src/components/Game.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AppContext } from \"../App\";\r\nimport { useContext } from \"react\";\r\nimport background from '../images/game.png'\r\nimport shipPic from '../images/ship.png'\r\nimport pirategirlPic from '../images/pirategirl.png'\r\nimport Square from './Square';\r\nimport Board from './Board';\r\nimport { useState } from 'react';\r\n// import { winCalc } from '../winCalc';\r\n\r\n\r\n\r\n\r\nconst Game = () => {\r\n  const navigate = useNavigate();\r\n  const [board, setBoard] = useState(Array(9).fill(null))\r\n  const [xIsNext, setXIsNext] = useState(true)\r\n  const winner = winCalc(board)\r\n  const clickHandler = (index) => {\r\n      const copyBoard = [...board]\r\n      // Already clicked or not\r\n      if (winner || copyBoard[index]) return\r\n      // if (winner || copyBoard !=null) return\r\n      copyBoard[index] = xIsNext ? 'х' : '0'\r\n      // Who is next 'x' or '0'?\r\n      // Refresh state\r\n      setBoard(copyBoard)\r\n      setXIsNext(!xIsNext)\r\n  }\r\n  function previous() {\r\n    navigate('/home')\r\n  }\r\n  function game(){\r\n    navigate('/result')\r\n  }\r\n  function next() {\r\n    navigate('/data')\r\n  }\r\n  const card = {\r\n    height: '85vh',\r\n    marginBottom: '2px'\r\n  }\r\n  const startNewGame = ()=>{\r\n      return(\r\n          <button className='startBtn' onClick={()=> setBoard(Array(9).fill(null))}>Clear field</button>\r\n      )\r\n  }\r\n  return (\r\n    <div className=\"\">\r\n    <div className=\"card w-96 text-primary-content\">\r\n      <div className='plannerstyle' style={{ backgroundImage: `url(${background})` }}>\r\n      <div className=\"card-body\" style={card}>\r\n        <h2 className=\"card-title\"></h2>\r\n        <div className='wrapper'>\r\n          {startNewGame()}\r\n        <Board squares={board} click={clickHandler}/> \r\n        <p className='gameInfo'>{winner ? 'Winner: '+winner : 'Next step: ' + (xIsNext ? 'х' : '0')}</p> \r\n      </div>\r\n          {/* <div className=\"buttons\">  \r\n          <button onClick={previous} className=\"btn2\">\r\n          <img src={shipPic} alt=\"\" />\r\n          </button>\r\n          <h1 onClick={game} type=\"submit\" className=\"btn1\">\r\n          <h1>Start</h1>\r\n          </h1>\r\n          <button onClick={next} className=\"btn2\">\r\n          <img src={pirategirlPic} alt=\"\" /> \r\n          </button>\r\n          </div> */}\r\n        <div className=\"card-actions justify-end\"></div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n  // return (\r\n  //     <div className='wrapper'>\r\n  //         {startNewGame()}\r\n  //       <Board squares={board} click={clickHandler}/> \r\n  //       <p className='gameInfo'>{winner ? 'Winner: '+winner : 'Next step: ' + (xIsNext ? 'х' : '0')}</p> \r\n  //     </div>\r\n  // );\r\n}\r\n\r\nexport default Game;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}